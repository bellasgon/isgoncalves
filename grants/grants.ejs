```{=html}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

<style>
  /* lista limpa */
  ul.list{list-style:none;margin:0;padding:0}

  /* card amplo e arejado, com espaço entre cartões */
  .grant-card{
    border:1px solid var(--bs-border-color, #e9ecef);
    border-radius: .9rem;
    padding: 1.25rem 1.6rem;     /* respiro interno maior */
    margin-bottom: 1rem;         /* espaço entre cartões */
    background: var(--bs-body-bg);
    box-shadow: 0 1px 2px rgba(0,0,0,.02);
    transition: box-shadow .12s ease, transform .06s ease, border-color .12s ease;
  }
  .grant-card:hover{
    transform: translateY(-1px);
    box-shadow: 0 8px 24px rgba(0,0,0,.08);
    border-color: var(--bs-border-color-translucent, #dfe3e6);
  }
  .grant-card:last-child{margin-bottom:0}

  /* tipografia como no exemplo */
  .grant-title{
    font-weight: 700;
    font-size: 1.3rem;
    line-height: 1.35;
    margin: 0;
  }
  .grant-meta{
    color: var(--bs-secondary-color);
    font-size: .95rem;
    margin-top: .35rem;
  }
  .grant-description{
    color: var(--bs-secondary-color);
    font-size: 1rem;
    line-height: 1.6;     /* mais confortável, como no exemplo */
    margin-top: .8rem;
  }

  /* badge do valor/ícone à direita com cor primária do tema */
  .amount-badge, .icon-badge{
    display: inline-flex; align-items: center; gap: .4rem;
    font-weight: 700;
    border-radius: 999px;
    padding: .4rem .85rem;
    white-space: nowrap;
    color: var(--bs-primary);
    background: color-mix(in oklab, var(--bs-primary) 10%, transparent);
    border: 1px solid color-mix(in oklab, var(--bs-primary) 70%, var(--bs-body-bg));
    font-size: .95rem;
  }
  .icon-badge{ font-weight: 600; }
  .amount-badge i, .icon-badge i{ opacity: .9; }
</style>

<%
  const normType = t => (t||"").toLowerCase();

  function years(it){
    if (it.begin && it.end && it.begin !== it.end) return `${it.begin}–${it.end}`;
    if (it.begin) return `${it.begin}`;
    if (it.end) return `${it.end}`;
    return "";
  }

  // monta a linha "Funder • Ano(s) • Note" (só inclui o que existir)
  function metaLine(it){
    const parts = [];
    if (it.funder) parts.push(it.funder);
    const y = years(it); if (y) parts.push(y);
    if (it.note) parts.push(it.note);
    return parts.join(" • ");
  }
%>

<ul class="list">
  <% for (const item of items) { %>
    <li <%= metadataAttrs(item) %> class="grant-card">
      <div class="d-flex justify-content-between align-items-start gap-3">
        <div class="flex-grow-1">
          <h3 class="grant-title"><%= item.title %></h3>

          <% const meta = metaLine(item); if (meta) { %>
            <div class="grant-meta"><%= meta %></div>
          <% } %>

          <% if (item.description) { %>
            <div class="grant-description"><%= item.description %></div>
          <% } %>
        </div>

        <% if (normType(item.type) === "grant" && item.amount) { %>
          <div class="amount-badge">
            <i class="bi bi-cash-coin"></i><span><%= item.amount %></span>
          </div>
        <% } else if (normType(item.type) === "award") { %>
          <div class="icon-badge" title="Award">
            <i class="bi bi-trophy"></i>
          </div>
        <% } %>
      </div>
    </li>
  <% } %>
</ul>



```

